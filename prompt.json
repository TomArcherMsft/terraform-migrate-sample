[
    {
        "role": "user",
        "content": "\nresource \"random_pet\" \"rg_name\" {\n  prefix = var.resource_group_name_prefix\n}\n\nresource \"azurerm_resource_group\" \"rg\" {\n  name     = random_pet.rg_name.id\n  location = var.resource_group_location\n}\n\nresource \"random_string\" \"name\" {\n  length  = 13\n  lower   = true\n  numeric = false\n  special = false\n  upper   = false\n}\n\nresource \"azurerm_dns_zone\" \"zone\" {\n  name                = \"www.${random_string.name.result}.azurequickstart.org\"\n  resource_group_name = azurerm_resource_group.rg.name\n}\n\nresource \"azurerm_dns_a_record\" \"record\" {\n  name                = \"www\"\n  resource_group_name = azurerm_resource_group.rg.name\n  zone_name           = azurerm_dns_zone.zone.name\n  ttl                 = 3600\n  records             = [\"1.2.3.4\", \"1.2.3.5\"]\n}\n\noutput \"name_servers\" {\n  value = azurerm_dns_zone.zone.name_servers\n}\n\nterraform {\n  required_version = \">=0.12\"\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n      version = \"~>2.0\"\n    }\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~>3.0\"\n    }\n  }\n}\nprovider \"azurerm\" {\n  features {}\n}\nvariable \"resource_group_location\" {\n  default     = \"eastus\"\n  description = \"Location for all resources.\"\n}\n\nvariable \"resource_group_name_prefix\" {\n  default     = \"rg\"\n  description = \"Prefix of the resource group name that's combined with a random ID so name is unique in your Azure subscription.\"\n}\n"
    },
    {
        "role": "assistant",
        "content": "###main.tf###\nresource \"random_pet\" \"rg_name\" {\n  prefix = var.resource_group_name_prefix\n}\n\nresource \"azurerm_resource_group\" \"rg\" {\n  name     = random_pet.rg_name.id\n  location = var.resource_group_location\n}\n\nresource \"random_string\" \"azurerm_dns_zone_name\" {\n  length  = 13\n  lower   = true\n  numeric = false\n  special = false\n  upper   = false\n}\n\nresource \"azurerm_dns_zone\" \"zone\" {\n  name = (\n    var.dns_zone_name != null ?\n    var.dns_zone_name :\n    \"www.${random_string.azurerm_dns_zone_name.result}.azurequickstart.org\"\n  )\n  resource_group_name = azurerm_resource_group.rg.name\n}\n\nresource \"azurerm_dns_a_record\" \"record\" {\n  name                = \"www\"\n  resource_group_name = azurerm_resource_group.rg.name\n  zone_name           = azurerm_dns_zone.zone.name\n  ttl                 = var.dns_ttl\n  records             = var.dns_records\n}\n\nmain.tf:end\n###outputs.tf###\noutput \"resource_group_name\" {\n  value = azurerm_resource_group.rg.name\n}\n\noutput \"dns_zone_name\" {\n  value = azurerm_dns_zone.zone.name\n}\n\noutput \"name_servers\" {\n  value = azurerm_dns_zone.zone.name_servers\n}\n\noutputs.tf:end\n###providers.tf###\nterraform {\n  required_version = \">=1.2\"\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n      version = \"~>3.0\"\n    }\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~>3.0\"\n    }\n  }\n}\nprovider \"azurerm\" {\n  features {}\n}\nproviders.tf:end\n###readme.md###\n# Azure DNS zone and A record\n\nThis template creates an Azure DNS zone and an 'A' record.\n\n## Terraform resource types\n\n- [random_pet](https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/pet)\n- [azurerm_resource_group](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/resource_group)\n- [random_string](https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/string)\n- [azurerm_dns_zone](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/dns_zone)\n- [azurerm_dns_a_record](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/dns_a_record)\n\n## Variables\n\n| Name | Description | Default |\n|-|-|-|\n| `resource_group_name_prefix` | Prefix of the resource group name that's combined with a random ID so name is unique in your Azure subscription. | rg |\n| `resource_group_location` | Location of the resource group. | eastus |\n| `dns_zone_name` | Name of the DNS zone. | null |\n| `dns_ttl` | Time To Live (TTL) of the DNS record (in seconds). | 3600 |\n| `dns_records` | List of IPv4 addresses. | [\"1.2.3.4\", \"1.2.3.5\"] |\n\n## Example\n\nTo see how to run this example, see [Create an Azure resource group using Terraform](https://docs.microsoft.com/azure/developer/terraform/create-resource-group).\n\nreadme.md:end\n###variables.tf###\nvariable \"resource_group_location\" {\n  type        = string\n  default     = \"eastus\"\n  description = \"Location for all resources.\"\n}\n\nvariable \"resource_group_name_prefix\" {\n  type        = string\n  default     = \"rg\"\n  description = \"Prefix of the resource group name that's combined with a random value so name is unique in your Azure subscription.\"\n}\n\nvariable \"dns_zone_name\" {\n  type        = string\n  default     = null\n  description = \"Name of the DNS zone.\"\n}\n\nvariable \"dns_ttl\" {\n  type        = number\n  default     = 3600\n  description = \"Time To Live (TTL) of the DNS record (in seconds).\"\n}\n\nvariable \"dns_records\" {\n  type        = list(string)\n  default     = [\"1.2.3.4\", \"1.2.3.5\"]\n  description = \"List of IPv4 addresses.\"\n}\n\nvariables.tf:end\n"
    },
    {
        "role": "user",
        "content": "\nresource \"random_pet\" \"rg_name\" {\n  prefix = var.resource_group_name_prefix\n}\n\nresource \"azurerm_resource_group\" \"rg\" {\n  name     = random_pet.rg_name.id\n  location = var.resource_group_location\n}\n\ndata \"azurerm_client_config\" \"current\" {}\n\nresource \"azurerm_key_vault\" \"vault\" {\n  name                = var.vault_name\n  location            = azurerm_resource_group.rg.location\n  resource_group_name = azurerm_resource_group.rg.name\n  sku_name            = var.sku_name\n  tenant_id           = data.azurerm_client_config.current.tenant_id\n}\n\nresource \"azurerm_key_vault_key\" \"key\" {\n  name         = var.key_name\n  key_vault_id = azurerm_key_vault.vault.id\n  key_type     = var.key_type\n  key_size     = var.key_size\n  key_opts     = var.key_ops\n}\n\noutput \"proxy_key\" {\n  value = azurerm_key_vault_key.key\n}\n\nterraform {\n  required_version = \">=0.12\"\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n      version = \"~>2.0\"\n    }\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~>3.0\"\n    }\n  }\n}\nprovider \"azurerm\" {\n  features {}\n}\nvariable \"resource_group_location\" {\n  default     = \"eastus\"\n  description = \"Location for all resources.\"\n}\n\nvariable \"resource_group_name_prefix\" {\n  default     = \"rg\"\n  description = \"Prefix of the resource group name that's combined with a random ID so name is unique in your Azure subscription.\"\n}\n\nvariable \"vault_name\" {\n  description = \"The name of the key vault to be created.\"\n}\n\nvariable \"key_name\" {\n  description = \"The name of the key to be created.\"\n}\n\nvariable \"sku_name\" {\n  description = \"The SKU of the vault to be created.\"\n  default     = \"standard\"\n  type        = string\n  validation {\n    condition     = contains([\"standard\", \"premium\"], var.sku_name)\n    error_message = \"The sku_name must be one of the following: standard, premium.\"\n  }\n}\n\nvariable \"key_type\" {\n  description = \"The JsonWebKeyType of the key to be created.\"\n  default     = \"RSA\"\n  type        = string\n  validation {\n    condition     = contains([\"EC\", \"EC-HSM\", \"RSA\", \"RSA-HSM\"], var.key_type)\n    error_message = \"The key_type must be one of the following: EC, EC-HSM, RSA, RSA-HSM.\"\n  }\n}\n\nvariable \"key_ops\" {\n  description = \"The permitted JSON web key operations of the key to be created.\"\n  default     = []\n}\n\nvariable \"key_size\" {\n  description = \"The size in bits of the key to be created.\"\n  default     = 2048\n}\n"
    },
    {
        "role": "assistant",
        "content": "###main.tf###\nresource \"random_pet\" \"rg_name\" {\n  prefix = var.resource_group_name_prefix\n}\n\nresource \"azurerm_resource_group\" \"rg\" {\n  name     = random_pet.rg_name.id\n  location = var.resource_group_location\n}\n\ndata \"azurerm_client_config\" \"current\" {}\n\nresource \"random_string\" \"azurerm_key_vault_name\" {\n  length  = 13\n  lower   = true\n  numeric = false\n  special = false\n  upper   = false\n}\n\nlocals {\n  current_user_id = coalesce(var.msi_id, data.azurerm_client_config.current.object_id)\n}\n\nresource \"azurerm_key_vault\" \"vault\" {\n  name                       = coalesce(var.vault_name, \"vault-${random_string.azurerm_key_vault_name.result}\")\n  location                   = azurerm_resource_group.rg.location\n  resource_group_name        = azurerm_resource_group.rg.name\n  tenant_id                  = data.azurerm_client_config.current.tenant_id\n  sku_name                   = var.sku_name\n  soft_delete_retention_days = 7\n\n  access_policy {\n    tenant_id = data.azurerm_client_config.current.tenant_id\n    object_id = local.current_user_id\n\n    key_permissions    = var.key_permissions\n    secret_permissions = var.secret_permissions\n  }\n}\n\nresource \"random_string\" \"azurerm_key_vault_key_name\" {\n  length  = 13\n  lower   = true\n  numeric = false\n  special = false\n  upper   = false\n}\n\nresource \"azurerm_key_vault_key\" \"key\" {\n  name = coalesce(var.key_name, \"key-${random_string.azurerm_key_vault_key_name.result}\")\n\n  key_vault_id = azurerm_key_vault.vault.id\n  key_type     = var.key_type\n  key_size     = var.key_size\n  key_opts     = var.key_ops\n\n  rotation_policy {\n    automatic {\n      time_before_expiry = \"P30D\"\n    }\n\n    expire_after         = \"P90D\"\n    notify_before_expiry = \"P29D\"\n  }\n}\n\nmain.tf:end\n###outputs.tf###\noutput \"resource_group_name\" {\n  value = azurerm_resource_group.rg.name\n}\n\noutput \"azurerm_key_vault_name\" {\n  value = azurerm_key_vault.vault.name\n}\n\noutput \"azurerm_key_vault_id\" {\n  value = azurerm_key_vault.vault.id\n}\n\noutputs.tf:end\n###providers.tf###\nterraform {\n  required_version = \">=1.0\"\n  required_providers {\n    azurerm = {\n      source  = \"hashicorp/azurerm\"\n      version = \"~>3.0\"\n    }\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~>3.0\"\n    }\n  }\n}\nprovider \"azurerm\" {\n  features {}\n}\nproviders.tf:end\n###readme.md###\n# Azure Key Vault\n\nThis template deploys an Azure Key Vault.\n\n## Terraform resource types\n\n- [random_pet](https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/pet)\n- [azurerm_resource_group](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/resource_group)\n- [random_string](https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/string)\n- [azurerm_key_vault](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault)\n- [azurerm_key_vault_key](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key)\n\n## Variables\n\n| Name | Description | Default |\n|-|-|-|\n| `resource_group_name_prefix` | Prefix of the resource group name that's combined with a random ID so name is unique in your Azure subscription. | rg |\n| `resource_group_location` | Location of the resource group. | eastus |\n| `vault_name` | The name of the key vault to be created. The value is randomly generated if not specified or blank. | \"\" |\n| `key_name` | The name of the key to be created. | The value is randomly generated if not specified or blank. |\n| `sku_name` | The SKU of the vault to be created. | standard |\n| `key_permissions` | List of key permissions. | [\"List\", \"Create\", \"Delete\", \"Get\", \"Purge\", \"Recover\", \"Update\", \"GetRotationPolicy\", \"SetRotationPolicy\"] |\n| `secret_permissions` | List of secret permissions. | [\"Set\"] |\n| `key_type` | The JsonWebKeyType of the key to be created. | RSA |\n| `key_ops` | The permitted JSON web key operations of the key to be created. | Empty list of strings. |\n| `key_size` | The size in bits of the key to be created. | 2048 |\n| `msi_id` | The Managed Service Identity ID. If this value isn't null (the default), the Azure Key Vault Object ID will be set to this value. | null |\n\n## Example\n\nTo see how to run this example, see [Create an Azure key vault and a key by using Terraform](https://learn.microsoft.com/azure/key-vault/keys/quick-create-terraform).\n\nreadme.md:end\n###variables.tf###\nvariable \"resource_group_location\" {\n  type        = string\n  description = \"Location for all resources.\"\n  default     = \"eastus\"\n}\n\nvariable \"resource_group_name_prefix\" {\n  type        = string\n  description = \"Prefix of the resource group name that's combined with a random ID so name is unique in your Azure subscription.\"\n  default     = \"rg\"\n}\n\nvariable \"vault_name\" {\n  type        = string\n  description = \"The name of the key vault to be created. The value will be randomly generated if blank.\"\n  default     = \"\"\n}\n\nvariable \"key_name\" {\n  type        = string\n  description = \"The name of the key to be created. The value will be randomly generated if blank.\"\n  default     = \"\"\n}\n\nvariable \"sku_name\" {\n  type        = string\n  description = \"The SKU of the vault to be created.\"\n  default     = \"standard\"\n  validation {\n    condition     = contains([\"standard\", \"premium\"], var.sku_name)\n    error_message = \"The sku_name must be one of the following: standard, premium.\"\n  }\n}\n\nvariable \"key_permissions\" {\n  type        = list(string)\n  description = \"List of key permissions.\"\n  default     = [\"List\", \"Create\", \"Delete\", \"Get\", \"Purge\", \"Recover\", \"Update\", \"GetRotationPolicy\", \"SetRotationPolicy\"]\n}\n\nvariable \"secret_permissions\" {\n  type        = list(string)\n  description = \"List of secret permissions.\"\n  default     = [\"Set\"]\n}\n\nvariable \"key_type\" {\n  description = \"The JsonWebKeyType of the key to be created.\"\n  default     = \"RSA\"\n  type        = string\n  validation {\n    condition     = contains([\"EC\", \"EC-HSM\", \"RSA\", \"RSA-HSM\"], var.key_type)\n    error_message = \"The key_type must be one of the following: EC, EC-HSM, RSA, RSA-HSM.\"\n  }\n}\n\nvariable \"key_ops\" {\n  type        = list(string)\n  description = \"The permitted JSON web key operations of the key to be created.\"\n  default     = [\"decrypt\", \"encrypt\", \"sign\", \"unwrapKey\", \"verify\", \"wrapKey\"]\n}\n\nvariable \"key_size\" {\n  type        = number\n  description = \"The size in bits of the key to be created.\"\n  default     = 2048\n}\n\nvariable \"msi_id\" {\n  type        = string\n  description = \"The Managed Service Identity ID. If this value isn't null (the default), 'data.azurerm_client_config.current.object_id' will be set to this value.\"\n  default     = null\n}\n\nvariables.tf:end\n"
    },
    {
        "role": "user",
        "content": "\n# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\nprovider \"azurerm\" {\n  features {}\n}\n\nresource \"azurerm_resource_group\" \"example\" {\n  name     = \"${var.prefix}-resources\"\n  location = var.location\n}\n\nresource \"azurerm_storage_account\" \"example\" {\n  name                     = \"${var.prefix}stor\"\n  resource_group_name      = azurerm_resource_group.example.name\n  location                 = azurerm_resource_group.example.location\n  account_tier             = \"Standard\"\n  account_replication_type = \"LRS\"\n}\n\nresource \"azurerm_batch_account\" \"example\" {\n  name                                = \"${var.prefix}batch\"\n  resource_group_name                 = azurerm_resource_group.example.name\n  location                            = azurerm_resource_group.example.location\n  storage_account_id                  = azurerm_storage_account.example.id\n  storage_account_authentication_mode = \"StorageKeys\"\n}\n\nresource \"azurerm_batch_pool\" \"fixed\" {\n  name                = \"${var.prefix}-fixed-pool\"\n  resource_group_name = azurerm_resource_group.example.name\n  account_name        = azurerm_batch_account.example.name\n  display_name        = \"Fixed Scale Pool\"\n  vm_size             = \"Standard_A1\"\n  node_agent_sku_id   = \"batch.node.ubuntu 22.04\"\n\n  fixed_scale {\n    target_dedicated_nodes = 2\n    resize_timeout         = \"PT15M\"\n  }\n\n  storage_image_reference {\n    publisher = \"Canonical\"\n    offer     = \"0001-com-ubuntu-server-jammy\"\n    sku       = \"22_04-lts\"\n    version   = \"latest\"\n  }\n\n  start_task {\n    command_line       = \"echo 'Hello World from $env'\"\n    task_retry_maximum = 1\n    wait_for_success   = true\n\n    common_environment_properties = {\n      env = \"TEST\"\n    }\n\n    user_identity {\n      auto_user {\n        elevation_level = \"NonAdmin\"\n        scope           = \"Task\"\n      }\n    }\n  }\n\n  metadata = {\n    \"tagName\" = \"Example tag\"\n  }\n}\n\nresource \"azurerm_batch_pool\" \"autopool\" {\n  name                = \"${var.prefix}-autoscale-pool\"\n  resource_group_name = azurerm_resource_group.example.name\n  account_name        = azurerm_batch_account.example.name\n  display_name        = \"Auto Scale Pool\"\n  vm_size             = \"Standard_A1\"\n  node_agent_sku_id   = \"batch.node.ubuntu 22.04\"\n\n  auto_scale {\n    evaluation_interval = \"PT15M\"\n\n    formula = <<EOF\n      startingNumberOfVMs = 1;\n      maxNumberofVMs = 25;\n      pendingTaskSamplePercent = $PendingTasks.GetSamplePercent(180 * TimeInterval_Second);\n      pendingTaskSamples = pendingTaskSamplePercent < 70 ? startingNumberOfVMs : avg($PendingTasks.GetSample(180 * TimeInterval_Second));\n      $TargetDedicatedNodes=min(maxNumberofVMs, pendingTaskSamples);\nEOF\n  }\n\n  storage_image_reference {\n    publisher = \"Canonical\"\n    offer     = \"0001-com-ubuntu-server-jammy\"\n    sku       = \"22_04-lts\"\n    version   = \"latest\"\n  }\n}\n\n## Example: Azure Batch\n\nThis example provisions the following Resources:\n\n## Creates\n\n1. A Resource Group\n2. A [Storage Account](https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#azure-storage-account)\n3. A [Batch Account](https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#account)\n4. Two [Batch pools](https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#pool): one with fixed scale and the other with auto-scale\n\n## Usage\n\n- Provide values to all variables (credentials and names).\n- Create with `terraform apply`\n- Destroy all with `terraform destroy --force`\n\n## Example Usage with User Subscription mode\n\nIt's also possible to deploy Azure Batch Account in User Subscription mode. In this mode, all the machines that will be created by batch pools will be created in the user Azure subscription. In this mode, you need to specify a reference to an Azure Key Vault that will be used by Azure Batch to store and retrieve sensitive information. You can read more about User Subscription mode in Azure Batch on [this page](https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#account).\n\n~> **NOTE:** the script below uses the also the [AzureAD provider](https://www.terraform.io/docs/providers/azuread/) to retrieve the \"Microsoft Azure Batch\" service principal information.\n\n\n```hcl\nresource \"azurerm_resource_group\" \"example\" {\n  name     = \"batch-rg\"\n  location = \"westeurope\"\n}\n\n# Get Microsoft Azure Batch service principal reference using the AzureAD provider\ndata \"azuread_service_principal\" \"batchsp\" {\n  display_name = \"Microsoft Azure Batch\"\n}\n\nresource \"azurerm_key_vault\" \"example\" {\n  name                            = \"batchkv\"\n  location                        = \"${azurerm_resource_group.example.location}\"\n  resource_group_name             = \"${azurerm_resource_group.example.name}\"\n  enabled_for_disk_encryption     = true\n  enabled_for_deployment          = true\n  enabled_for_template_deployment = true\n  tenant_id                       = \"00000000-0000-0000-0000-000000000002\"\n\n  sku_name = \"standard\"\n\n  access_policy {\n    tenant_id = \"00000000-0000-0000-0000-000000000002\"\n    object_id = \"${data.azuread_service_principal.batchsp.object_id}\"\n\n    secret_permissions = [\n      \"Get\",\n      \"List\",\n      \"Set\",\n      \"Delete\"\n    ]\n\n  }\n}\n\nresource \"azurerm_role_assignment\" \"contribrole\" {\n  scope                = \"/subscriptions/00000000-0000-0000-0000-000000000001\"\n  role_definition_name = \"Contributor\"\n  principal_id         = \"${data.azuread_service_principal.batchsp.object_id}\"\n}\n\nresource \"azurerm_batch_account\" \"example\" {\n  name                 = \"batchaccount\"\n  resource_group_name  = \"${azurerm_resource_group.example.name}\"\n  location             = \"${azurerm_resource_group.example.location}\"\n  storage_account_id   = \"${azurerm_storage_account.example.id}\"\n  pool_allocation_mode = \"UserSubscription\"\n  \n  # reference the Azure KeyVault\n  key_vault_reference {\n    id  = \"${azurerm_key_vault.example.id}\"\n    url = \"${azurerm_key_vault.example.vault_uri}\"\n  }\n}\n```\n\n# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\nvariable \"prefix\" {\n  description = \"The prefix which should be used for all resources in this example\"\n}\n\nvariable \"location\" {\n  description = \"The Azure Region in which all resources in this example should be created.\"\n}\n"
    }
]